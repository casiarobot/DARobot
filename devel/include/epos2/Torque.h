// Generated by gencpp from file epos2/Torque.msg
// DO NOT EDIT!


#ifndef EPOS2_MESSAGE_TORQUE_H
#define EPOS2_MESSAGE_TORQUE_H

#include <ros/service_traits.h>


#include <epos2/TorqueRequest.h>
#include <epos2/TorqueResponse.h>


namespace epos2
{

struct Torque
{

typedef TorqueRequest Request;
typedef TorqueResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Torque
} // namespace epos2


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::epos2::Torque > {
  static const char* value()
  {
    return "b4b3a96d40bd9857be0dbc7b509f02c4";
  }

  static const char* value(const ::epos2::Torque&) { return value(); }
};

template<>
struct DataType< ::epos2::Torque > {
  static const char* value()
  {
    return "epos2/Torque";
  }

  static const char* value(const ::epos2::Torque&) { return value(); }
};


// service_traits::MD5Sum< ::epos2::TorqueRequest> should match 
// service_traits::MD5Sum< ::epos2::Torque > 
template<>
struct MD5Sum< ::epos2::TorqueRequest>
{
  static const char* value()
  {
    return MD5Sum< ::epos2::Torque >::value();
  }
  static const char* value(const ::epos2::TorqueRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::epos2::TorqueRequest> should match 
// service_traits::DataType< ::epos2::Torque > 
template<>
struct DataType< ::epos2::TorqueRequest>
{
  static const char* value()
  {
    return DataType< ::epos2::Torque >::value();
  }
  static const char* value(const ::epos2::TorqueRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::epos2::TorqueResponse> should match 
// service_traits::MD5Sum< ::epos2::Torque > 
template<>
struct MD5Sum< ::epos2::TorqueResponse>
{
  static const char* value()
  {
    return MD5Sum< ::epos2::Torque >::value();
  }
  static const char* value(const ::epos2::TorqueResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::epos2::TorqueResponse> should match 
// service_traits::DataType< ::epos2::Torque > 
template<>
struct DataType< ::epos2::TorqueResponse>
{
  static const char* value()
  {
    return DataType< ::epos2::Torque >::value();
  }
  static const char* value(const ::epos2::TorqueResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // EPOS2_MESSAGE_TORQUE_H
